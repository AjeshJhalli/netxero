@page "/bookings"
@using Microsoft.Data.Sqlite
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
<PageTitle>Bookings</PageTitle>

<h1>Bookings</h1>

<table class="table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Address</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var hotel in hotels)
    {
      <tr>
        <td>@hotel.name</td>
        <td>@hotel.addressLine1, @hotel.addressCity, @hotel.addressCountry, @hotel.addressPostcode</td>
        <td>
          <a class="btn btn-secondary" href="/hotel-form?id=@hotel.id">Edit</a>
          <button class="btn btn-secondary" @onclick="() => DeleteHotel(hotel.id)">Delete</button>
        </td>
      </tr>
    }
  </tbody>
</table>


<a class="btn btn-primary" href="hotel-form">New</a>

@code {

  private List<HotelService.Hotel> hotels = [];

  protected override void OnInitialized()
  {
    using (var connection = new SqliteConnection("Data Source=databases/HotelRoomAllocator.sqlite"))
    {
      connection.Open();

      var command = connection.CreateCommand();
      command.CommandText = @"SELECT id, name, address_line1, address_city, address_country, address_postcode FROM hotel";
      var reader = command.ExecuteReader();

      while (reader.Read())
      {
        HotelService.Hotel hotel = new(reader.GetInt32(0), reader.GetString(1), reader.GetString(2), "", reader.GetString(3), "", reader.GetString(4), reader.GetString(5));
        hotels.Add(hotel);
      }
    }
  }

  public async Task DeleteHotel(int id)
  {
    bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this hotel?");
    if (confirmed)
    {
      HotelService.Delete(id);
      NavigationManager.NavigateTo("/hotels", forceLoad: true);
    }

  }
}
