@page "/person-form"
@using Microsoft.Data.Sqlite
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using Microsoft.AspNetCore.WebUtilities

<PageTitle>Person</PageTitle>

<h1>Person</h1>

<EditForm Model="Model" OnValidSubmit="Save" FormName="personform">
  <AntiforgeryToken />
  <DataAnnotationsValidator />
  <ValidationSummary />
  <div class="form-group">
    <label>
      First Name
      <InputText class="form-control" @bind-Value="Model!.firstName" />
    </label>
  </div>
  <div class="form-group">
    <label>
      Last Name
      <InputText class="form-control" @bind-Value="Model!.lastName" />
    </label>
  </div>
  <div class="form-group">
    <label>
      Email Address
      <InputText type="email" class="form-control" @bind-Value="Model!.emailAddress" />
    </label>
  </div>
  <div class="form-group">
    <label>
      Phone Number
      <InputText type="tel" class="form-control" @bind-Value="Model!.phoneNumber" />
    </label>
  </div>
  <a class="btn btn-primary mt-2" href="people">Cancel</a>
  <button class="btn btn-primary mt-2">Save</button>
</EditForm>

@code {
  [SupplyParameterFromForm]
  private PersonService.Person? Model { get; set; }

  protected override void OnInitialized()
  {
    var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

    int id = 0;

    if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var idString))
    {
      id = Convert.ToInt32(idString);
    }

    var person = PersonService.Get(id);

    Model ??= person;
  }
  private void Save(EditContext context)
  {
    var person = (PersonService.Person)context.Model;

    if (person.id == 0)
    {
      PersonService.Create(person);
    }
    else
    {
      PersonService.Update(person);
    }    

    NavigationManager.NavigateTo("/people");
  }
}
